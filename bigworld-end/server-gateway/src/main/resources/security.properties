#-------------------------------------VALIDATE---------------------------------------------------------
# 图形验证码长度
#com.chentongwei.security.code.image.length=6
# 图形验证码宽度
#com.chentongwei.security.code.image.width=150
# 图形验证码高度
#com.chentongwei.security.code.image.height=80
# 图形验证码过期时间
#com.chentongwei.security.code.image.expireIn=120
# 需要图形验证码拦截的url
#com.chentongwei.security.code.image.url=/login

# 短信验证码长度
#com.chentongwei.security.code.sms.length=6
# 短信验证码过期时间
#com.chentongwei.security.code.sms.expireIn=120
# 需要短信验证码拦截的url
com.chentongwei.security.code.sms.url=/mobile

com.chentongwei.security.code.geetest.id=f4fac365b3ccb82ed68cc8c1ab6346f6
com.chentongwei.security.code.geetest.key=c91ca7c31cf0d8a40c5cf5714624bfb2
com.chentongwei.security.code.geetest.newfailback=true
com.chentongwei.security.code.geetest.expireIn=120
#com.chentongwei.security.code.geetest.url=/login

com.chentongwei.security.code.repository=redis

# 需要设置同ip在一定时间内最多可访问同url几次的url路径
com.chentongwei.security.authorize.ipValidateUrl=/hello, /hello2
# 同ip在一定时间内最多可访问同url几次的时间配置（秒）
com.chentongwei.security.authorize.ipValidateSeconds=5
# 同ip在一定时间内最多可访问同url几次的次数配置
com.chentongwei.security.authorize.ipValidateCount=5

# 无需登录即可访问的url
com.chentongwei.security.authorize.permitUrls=/hello,    /hello2,/login.html, /oauth/token_key, /oauth/authorize, /oauth/token
# 若出现401状态码，则跳转到固定page
com.chentongwei.security.authorize.unAuthorizePage=/login.html

# REDIRECT/JSON 重定向到页面还是返回JSON
com.chentongwei.security.authentication.loginType=REDIRECT
# REDIRECT的方式，认证失败后跳转到的页面url
#com.chentongwei.security.authentication.loginErrorPage=http://www.tucaole.cn
# REDIRECT的方式，认证成功后跳转到的页面url
#com.chentongwei.security.authentication.loginSuccessPage=http://www.tucaole.cn

#-------------------------------------BROWSER---------------------------------------------------------

# 退出登录接口，缺省值为/logout
com.chentongwei.security.logout.logoutUrl=/logout2
# 缺省值：/default-login.html,是跳转到URL还是返回JSON，只要这里配置了URL（并且不为缺省值），那就是跳转到URL
#com.chentongwei.security.logout.logoutSuccessUrl=/login.html

# 记住我时长（缺省值3600s）
# 需要提前建表
#com.chentongwei.security.rememberme.seconds=7200

# 1：放开frame的拦截权限。缺省值；0：不允许frame嵌套
#com.chentongwei.security.frame.disableStatus=1

# session失效/被踢掉时跳转的地址，默认不配置，不配置则代表返回JSON格式
com.chentongwei.security.session.sessionInvalidUrl=/login.html
# 同一个用户在系统中最大的session数，默认1
com.chentongwei.security.session.maximumSessions=1
# 达到最大session时是否阻止新的登陆请求，默认为false（不阻止），新的登陆会将老的登陆T掉，使之session失效
com.chentongwei.security.session.maxSessionsPreventsLogin=true


#-------------------------------------APP---------------------------------------------------------
# JWT签名密钥，默认为defaultSecret
com.chentongwei.security.jwt.secret=tucaole
# JWT过期时间（秒），默认为3600s，一小时
com.chentongwei.security.jwt.expiration=120
# md5Key，每个token都对应一个唯一的md5key，默认值为randomKey
com.chentongwei.security.jwt.md5Key=tucaolemd5
# 判断token还剩余多少秒到期后自动刷新Token，并放到header里。默认是60s， -1为不刷新。
com.chentongwei.security.jwt.autoRefreshTokenExpiration=60
# 判断是否开启允许多人同账号同时在线，若不允许的话则将上一个人T掉，默认false，不T掉，允许多人登录，true：T掉
com.chentongwei.security.jwt.preventsLogin=false

# 内置了退出接口：/jwtLogout

# 是否要覆盖认证成功处理器，若要则指定enable=false。并且bean的name为“authenticationSuccessHandler”
com.chentongwei.security.app.success.handler.enable=true
# 是否要覆盖认证失败处理器，若要则指定enable=false。并且bean的name为“authenticationFailureHandler”
com.chentongwei.security.app.failure.handler.enable=true
